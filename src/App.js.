import React, { useEffect } from 'react';
import { Tldraw } from 'tldraw';
import './index.css';

export default function App() {
  const onMount = (app) => {
    const measureElement = document.createElement('div');
    measureElement.style.position = 'absolute';
    measureElement.style.visibility = 'hidden';
    measureElement.style.whiteSpace = 'pre-wrap';
    measureElement.style.fontFamily = 'Inter';
    measureElement.style.fontSize = '16px';
    measureElement.style.lineHeight = '1.5';
    measureElement.style.padding = '10px';
    document.body.appendChild(measureElement);

    const updateRectangleSize = () => {
      const textShape = app.getShape('shape:1');
      if (textShape) {
        measureElement.innerText = textShape.props.text;
        const rect = measureElement.getBoundingClientRect();
        const padding = 20;

        const newWidth = rect.width + padding;
        const newHeight = rect.height + padding;

        app.updateShapes([
          {
            id: 'shape:1',
            type: 'geo',
            props: {
              w: newWidth,
              h: newHeight,
            },
          },
        ]);
      }
    };

    app.createShapes([
      {
        id: 'shape:1',
        type: 'geo',
        x: 300,
        y: 200,
        props: {
          w: 5000,
          h: 2000,
          geo: 'rectangle',
          color: 'black',
          fill: 'solid',
          dash: 'draw',
          size: 'm',
          font: 'draw',
          text: 'Type here...',
          align: 'middle',
          verticalAlign: 'middle',
        },
      },
      {
        id: 'shape:2',
        type: 'text',
        x: 300,
        y: 150,
        props: {
          text: 'Description',
          size: 'm',
          font: 'draw',
          color: 'black',
        },
      },
      {
        id: 'shape:3',
        type: 'geo',
        x: 460,
        y: 150,
        props: {
          w: 50,
          h: 30,
          geo: 'rectangle',
          color: 'blue',
          fill: 'solid',
          dash: 'draw',
          size: 'm',
          font: 'draw',
          text: 'Go',
          align: 'middle',
          verticalAlign: 'middle',
        },
      },
    ]);

    app.on('shape:changed', ({ shapes }) => {
      if (shapes.some((shape) => shape.id === 'shape:1')) {
        updateRectangleSize();
      }
    });

    app.on('pointerup', (event) => {
      const shape = app.getShapeAtPoint(event.point);
      if (shape && shape.id === 'shape:3') {
        alert('Button clicked!');
      }
    });

    // Trigger the initial size update
    updateRectangleSize();

    return () => {
      app.off('shape:changed', updateRectangleSize);
      document.body.removeChild(measureElement);
    };
  };

  return (
    <div style={{ position: 'fixed', inset: 0 }}>
      <Tldraw onMount={onMount} />
    </div>
  );
}

